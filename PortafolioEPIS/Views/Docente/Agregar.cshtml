@model PortafolioEPIS.Models.Tbl_Docente

@{
                /**/

                List<PortafolioEPIS.Models.Tbl_CargoDocente> cargodocente = ViewBag.Tbl_CargoDocente;
                List<PortafolioEPIS.Models.Tbl_Profesion> profesion = ViewBag.Tbl_Profesion;


}
@{
    ViewBag.Title = "Agregar";
}
<div class="row">
    <div class="col-sm-12">
        <h4 class="page-title">Agregar / Editar Docente</h4>
    </div>
</div>


<div class="row">
    <div class="col-md-12">
        <div class="card-box">
            <h4 class="card-title">Información Docente</h4>
            @using (Html.BeginForm("Guardar", "Docente", FormMethod.Post, new { @id = "needs-validation", @novalidate = "novalidate", enctype = "multipart/form-data" }))
            {
                @Html.HiddenFor(x => x.Codigo_Docente)
                <div class="row clearfix">
                    <div class="col-md-6">
                        @Html.Label("Código")<span class="text-danger">*</span>
                        <div class="form-group">
                            @Html.TextBoxFor(x => x.Codigo_Docenteepis, new { @class = "form-control", id = "validationCustom01", required = "required", minlength = "6", pattern = "[0-9]{6,6}" })
                            <div class="invalid-feedback">
                                Ingrese un Codigo de 6 digitos
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        @Html.Label("DNI")<span class="text-danger">*</span>
                        <div class="form-group">
                            @Html.TextBoxFor(x => x.DNI_Docente, new { @class = "form-control", id = "validationCustom02", required = "required", minlength = "8", pattern = "[0-9]{8,8}"})
                            <div class="invalid-feedback">
                                Ingrese un DNI de 8 digitos
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row clearfix">
                    <div class="col-md-6">
                        @Html.Label("Nombres")<span class="text-danger">*</span>
                        <div class="form-group">
                            @Html.TextBoxFor(x => x.Nombres_Docente, new { @class = "form-control", id = "validationCustom03", required = "required", pattern = "[A-Za-z]*{3,50}" })
                            <div class="invalid-feedback">
                                Ingrese Nombre
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        @Html.Label("Apellidos")<span class="text-danger">*</span>
                        <div class="form-group">
                            @Html.TextBoxFor(x => x.Apellidos_Docente, new { @class = "form-control", id = "validationCustom04", required = "required", pattern = "[A-Za-z]*{3,100}" })
                            <div class="invalid-feedback">
                                Ingrese Apellido
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row clearfix">
                    <div class="col-md-4">
                        @Html.Label("Sexo")<span class="text-danger">*</span>
                        <br />
                        @Html.RadioButtonFor(x => x.Sexo_Docente, false, new { @checked = true }) Masculino  <label>&nbsp &nbsp</label>
                        @Html.RadioButtonFor(x => x.Sexo_Docente, true) Femenino

                    </div>
                    <div class="col-md-4">
                        @Html.Label("Estado Civil")
                        <div class="form-group">
                            <select name="EstadoCivil_Docente" class="form-control" id = "validationCustom05" required = "required">
                                <option @(Model.EstadoCivil_Docente == "" ? "Selected" : "") value="">- Seleccionar -</option>
                                <option @(Model.EstadoCivil_Docente == "Soltero" ? "Selected" : "") value="Soltero">Soltero</option>
                                <option @(Model.EstadoCivil_Docente == "Casado" ? "Selected" : "") value="Casado">Casado</option>
                                <option @(Model.EstadoCivil_Docente == "Divorciado" ? "Selected" : "") value="Divorciado">Divorciado</option>
                            </select>                            
                        </div>
                    </div>
                    <div class="col-md-4">
                        @Html.Label("Fecha de Nacimiento")<span class="text-danger">*</span>
                        <div class="form-group">
                            @Html.EditorFor(x => x.FechaNac_Docente, new { htmlAttributes = new { @class = "form-control date", id = "validationCustom03", required = "required" } })
                            <div class="invalid-feedback">
                                Seleccionar Fecha de Nacimiento
                            </div>
                        </div>
                        
                    </div>
                </div>
                <div class="row clearfix">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.Label("Profesion:")<span class="text-danger">*</span>
                            <select name="Codigo_Profesion" class="form-control" id = "validationCustom06" required = "required">
                                <option @(Model.Codigo_Profesion.Equals("") ? "Selected" : "") value="">- Seleccione -</option>

                                @foreach (var p in profesion)
                                {
                                    <option @(Model.Codigo_Profesion.Equals(p.Codigo_Profesion) ? "Selected" : "") value="@p.Codigo_Profesion">@p.Nombre_Profesion</option>
                                }
                            </select>     
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.Label("Cargo:")<span class="text-danger">*</span>
                            <select name="Codigo_CargoDocente" class="form-control" id = "validationCustom07" required = "required">
                                <option value=""> - Seleccione -</option>
                                @foreach (var p in cargodocente)
                                {
                                    if (p.Estado_CargoDocente == true)
                                    {
                                        <option @(Model.Codigo_CargoDocente.Equals(p.Codigo_CargoDocente) ? "selected" : "") value="@p.Codigo_CargoDocente">@p.Nombre_CargoDocente</option>
                                    }
                                }
                            </select>                            
                        </div>
                    </div>
                </div>
                <div class="row clearfix">
                    <div class="col-md-6">
                        @Html.Label("Dirección Actual")<span class="text-danger">*</span>
                        <div class="form-group">
                            @Html.TextBoxFor(x => x.DireccionActual_Docente, new { @class = "form-control", id = "validationCustom08", required = "required" })      
                            <div class="invalid-feedback">
                                Ingrese Direccion
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        @Html.Label("Dirección de Referencia")
                        <div class="form-group">
                            @Html.TextBoxFor(x => x.DireccionReferencia_Docente, new { @class = "form-control" })
                           
                        </div>
                    </div>
                </div>
                <div class="row clearfix">
                    <div class="col-md-4">
                        @Html.Label("Correo")<span class="text-danger">*</span>
                        <div class="form-group">
                            @Html.TextBoxFor(x => x.Correo_Docente, new { @class = "form-control", type = "email", id = "validationCustom09", required = "required" })
                            <div class="invalid-feedback">
                                Ingrese Correo (Ej: docente@upt.pe)
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        @Html.Label("Teléfono Fijo")
                        <div class="form-group">
                            @Html.TextBoxFor(x => x.TelefonoFijo_Docente, new { @class = "form-control" })
                           
                        </div>
                    </div>
                    <div class="col-md-4">
                        @Html.Label("Teléfono Celular")<span class="text-danger">*</span>
                        <div class="form-group">
                            @Html.TextBoxFor(x => x.TelefonoCelular_Docente, new { @class = "form-control", id = "validationCustom10", required = "required", minlength = "9", pattern = "^[9]\\d{8}$" })
                            <div class="invalid-feedback">
                                Ingrese Numero Celular Valido
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row clearfix">
                    <div class="col-md-12">
                        <div class="form-group">
                            @Html.Label("Foto")
                            <br />
                            @if (Model.Codigo_Docente > 0)
                            {
                                <img src="~/Imagen/@Model.Foto_Docente" height="70" width="70" />
                                @Html.HiddenFor(x => x.Foto_Docente)
                            }
                            else
                            {
                                <img src="~/Imagen/@Model.Foto_Docente" height="70" width="70" />
                                @Html.HiddenFor(x => x.Foto_Docente)

                            }
                            <input type="file" name="foto" />
                        </div>
                    </div>
                </div>


                <div class="row clearfix">
                    <div class="col-md-12">
                        @Html.Label("Estado")<span class="text-danger">*</span>
                        <div class="form-group">
                            @Html.RadioButtonFor(x => x.Estado_Docente, true, new { @checked = true }) Activo  <label>&nbsp &nbsp</label>
                            @Html.RadioButtonFor(x => x.Estado_Docente, false) Inactivo
                        </div>
                    </div>
                </div>
                <div class="row clearfix">
                    <div class="col-md-12">
                        <div class="form-group">
                            <div class="form-group row">
                                <div class="col-sm-8 col-9 text-left">
                                    <div class="form-check form-check-inline">
                                        <a href="~/Docente/Index2" class="btn btn btn-outline-primary btn-rounded" style='width:100px; height:35px'><i class="fa fa-close"></i>  Cancelar</a>
                                    </div>
                                    <div class="form-check form-check-inline">
                                        <button class="btn btn-primary btn-rounded" style='width:100px; height:35px' type="submit"><i class="fa fa-check"></i> Guardar</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>
<script>
    // Example starter JavaScript for disabling form submissions if there are invalid fields
    (function () {
        'use strict';

        window.addEventListener('load', function () {
            var form = document.getElementById('needs-validation');
            form.addEventListener('submit', function (event) {
                if (form.checkValidity() === false) {
                    event.preventDefault();
                    event.stopPropagation();
                }
                form.classList.add('was-validated');
            }, false);
        }, false);
    })();
</script>
