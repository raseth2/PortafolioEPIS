@{
    List<PortafolioEPIS.Models.Tbl_CargaAcademica> carga = new PortafolioEPIS.Models.Tbl_CargaAcademica().Listar();
    List<PortafolioEPIS.Models.Tbl_PlanEstudio> plan = new PortafolioEPIS.Models.Tbl_PlanEstudio().Listar();
    List<PortafolioEPIS.Models.Tbl_Docente> docente = new PortafolioEPIS.Models.Tbl_Docente().Listar();
}


@{

    string controlador = ViewContext.RouteData.Values["controller"].ToString().ToLower();
    PortafolioEPIS.Models.Tbl_Usuario usuario = new PortafolioEPIS.Models.Tbl_Usuario().Obtener(PortafolioEPIS.Models.SessionHelper.GetUser());
    List<PortafolioEPIS.Models.Tbl_DetalleCargaAcademica> detalleCargaAcademicas = new PortafolioEPIS.Models.Tbl_DetalleCargaAcademica().Listar();
    List<PortafolioEPIS.Models.Tbl_PruebaEntrada> prueba = new PortafolioEPIS.Models.Tbl_PruebaEntrada().Listar();
    List<PortafolioEPIS.Models.Tbl_InformeFinal> informe = new PortafolioEPIS.Models.Tbl_InformeFinal().Listar();

}

<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=0">
    <link rel="shortcut icon" type="image/x-icon" href="~/assets/img/icono_portafolio.png">
    <title>Portafolio EPIS - Docentes</title>
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    <link rel="stylesheet" type="text/css" href="~/assets/css/bootstrap.min.css">
    <link rel="stylesheet" type="text/css" href="~/assets/css/font-awesome.min.css">
    <link rel="stylesheet" type="text/css" href="~/assets/css/style.css">

    <!--Datatables-->
    <link href="~/assets/DataTables/dataTables.bootstrap4.min.css" rel="stylesheet" />

    <script src="~/assets/js/jquery-3.2.1.min.js"></script>
    <!--Estilos de combobox y campo de fecha nacimiento-->
    <link rel="stylesheet" type="text/css" href="~/assets/css/select2.min.css">
    <link rel="stylesheet" type="text/css" href="~/assets/css/bootstrap-datetimepicker.min.css">

    <!--HighCharts-->
    <link href="~/assets/HighCharts/css/highcharts.css" rel="stylesheet" />
    <script src="~/assets/HighCharts/highcharts.js"></script>
    <script src="~/assets/HighCharts/modules/exporting.js"></script>

</head>
<body>


    <div class="main-wrapper">
        <div class="header">
            <div class="header-left">
                <a href="index-2.html" class="logo">
                    <img src="~/assets/img/logo_portafolioEPIS.png" width="35" height="35" alt=""> <span>Portafolio EPIS</span>
                </a>
            </div>
            <a id="toggle_btn" href="javascript:void(0);"><i class="fa fa-bars"></i></a>
            <a id="mobile_btn" class="mobile_btn float-left" href="#sidebar"><i class="fa fa-bars"></i></a>
            <ul class="nav user-menu float-right">
                <li class="nav-item dropdown has-arrow">
                    <a href="#" class="dropdown-toggle nav-link user-link" data-toggle="dropdown">
                        <span class="user-img">
                            <img class="rounded-circle" src="~/Imagen/@usuario.Tbl_Docente.Foto_Docente" width="24" alt="Admin">
                            <span class="status online"></span>
                        </span>
                        <span>@usuario.Tbl_Docente.Nombres_Docente @usuario.Tbl_Docente.Apellidos_Docente</span>
                    </a>
                    <div class="dropdown-menu">
                        <a class="dropdown-item" href="#">Mi Prefil</a>
                        <a class="dropdown-item" href="#">Editar Perfil</a>
                        <a class="dropdown-item" href="#">Configurar</a>
                        <a class="dropdown-item" href="~/AreaDocente/Dashboard">Ingresar Area docente</a>
                        <a class="dropdown-item" href="~/Login/logout">Salir</a>
                    </div>
                </li>
            </ul>
            <div class="dropdown mobile-user-menu float-right">
                <a href="#" class="dropdown-toggle" data-toggle="dropdown" aria-expanded="false"><i class="fa fa-ellipsis-v"></i></a>
                <div class="dropdown-menu dropdown-menu-right">
                    <a class="dropdown-item" href="#">Mi Prefil</a>
                    <a class="dropdown-item" href="#">Editar Perfil</a>
                    <a class="dropdown-item" href="#">Configurar</a>
                    <a class="dropdown-item" href="~/AreaDocente/Dashboard">Ingresar Area docente</a>
                    <a class="dropdown-item" href="~/Login/logout">Salir</a>
                </div>
            </div>
        </div>
        @{ int a = 0;
            int c = 0;
            int p = 0;}
        @foreach (var doc in docente)
        { a++; }
        @foreach (var pl in plan)
        { p++; }
        @foreach (var ca in carga)
        { c++; }


        <div class="sidebar" id="sidebar">
            <div class="sidebar-inner slimscroll">
                <div id="sidebar-menu" class="sidebar-menu">
                    <ul>
                        <li class="menu-title">Principal</li>
                        <li class="active">
                            <a href="~/Inicio/Index"><i class="fa fa-dashboard"></i> <span>Inicio</span></a>
                        </li>
                        <li>
                            <a href="~/PlanEstudio/Index"><i class="fa fa-book"></i> <span>Plan de Estudio</span> <span class="badge badge-pill bg-primary float-right">@p</span></a>
                        </li>
                        <li>
                            <a href="~/CargaAcademica/Index"><i class="fa fa-cube"></i> <span>Carga Académica</span> <span class="badge badge-pill bg-primary float-right">@c</span></a>
                        </li>



                        <li>

                            <a href="~/Docente/Index2"><i class="fa fa-user"></i> <span>Docentes</span> <span class="badge badge-pill bg-primary float-right">@a</span></a>
                        </li>
                        <li class="submenu">
                            <a href="#"><i class="fa fa-cog"></i> <span> Mantenimiento </span> <span class="menu-arrow"></span></a>
                            <ul style="display: none;">
                                <li><a href="~/Semestre/Index">Semestre</a></li>
                                <li><a href="~/Seccion/Index">Sección</a></li>
                                <li><a href="~/Cargo/Index">Cargo</a></li>
                                <li><a href="~/Profesion/Index">Profesión</a></li>
                                <li><a href="~/Usuario/Index">Usuario</a></li>
                            </ul>
                        </li>
                        @{
                            int cant_guardado = 0;
                            int cant_enviado = 0;
                            int cant_rechazado = 0;
                            int cant_aceptado = 0;
                            int cant_noguardado = 0;
                            int cant_guardado1 = 0;
                            int cant_enviado1 = 0;
                            int cant_rechazado1 = 0;
                            int cant_aceptado1 = 0;
                            int cant_noguardado1 = 0;
                            int total_PruebaEntrada = 0;
                            int total_InformeFinal = 0;

                        }
                        @foreach (var item in detalleCargaAcademicas)
                        {
                            string estadoss = null;
                            foreach (var q in prueba)
                            {
                                if (item.Codigo_DetalleCargaAcademica == q.Codigo_DetalleCargaAcademica)
                                {
                                    estadoss = q.Estado_PruebaEntrada;

                                }

                            }
                            if (estadoss == "G")
                            {
                                cant_guardado++;

                            }
                            if (estadoss == "E")
                            {
                                cant_enviado++;

                            }
                            if (estadoss == "R")
                            {
                                cant_rechazado++;

                            }
                            if (estadoss == "A")
                            {
                                cant_aceptado++;

                            }
                            if (estadoss == null)
                            {
                                cant_noguardado++;

                            }

                            string estadoinformefinal = null;
                            foreach (var q in informe)
                            {
                                if (item.Codigo_DetalleCargaAcademica == q.Codigo_DetalleCargaAcademica)
                                {
                                    estadoinformefinal = q.Estado_InformeFinal;

                                }

                            }

                            if (estadoinformefinal == "G")
                            {
                                cant_guardado1++;

                            }
                            if (estadoinformefinal == "E")
                            {
                                cant_enviado1++;

                            }
                            if (estadoinformefinal == "R")
                            {
                                cant_rechazado1++;

                            }
                            if (estadoinformefinal == "A")
                            {
                                cant_aceptado1++;

                            }
                            if (estadoinformefinal == null)
                            {
                                cant_noguardado1++;

                            }
                        }
                        @{
                            total_PruebaEntrada = cant_aceptado + cant_enviado + cant_guardado + cant_noguardado + cant_rechazado;
                            total_InformeFinal = cant_aceptado1 + cant_enviado1 + cant_guardado1 + cant_noguardado1 + cant_rechazado1;
                        }


                        <li class="menu-title">Informes</li>
                        <li>
                            <a href="~/PruebaEntrada/IndexAdmin"><i class="fa fa-check-square-o"></i> <span>Prueba de Entrada</span> <span class="badge badge-pill bg-primary float-right">@total_PruebaEntrada</span></a>
                        </li>
                        <li class="sub-menu">
                            <a href="#"><i class="fa fa-check-square-o"></i> <span>Informe Portafolio</span><span class="menu-arrow"></span></a>
   
                            <ul style="display: none;">
                                <li><a href="~/PortafolioU1/IndexAdmin">Unidad I</a></li>
                                <li><a href="~/PortafolioU2/IndexAdmin">Unidad II</a></li>
                                <li><a href="~/PortafolioU3/IndexAdmin">Unidad III</a></li>
    
                            </ul>
                        </li>
                      
                        <li>
                            <a href="~/InformeFinal/IndexAdmin"><i class="fa fa-check-square-o"></i> <span>Informe Final</span> <span class="badge badge-pill bg-primary float-right">@total_InformeFinal</span></a>
                        </li>
                        <li class="menu-title">Reportes</li>
                        <li>
                            <a href="~/PruebaPDF/IndexAdmin"><i class="fa fa-folder"></i> <span>Docente con Cursos</span> <span class="badge badge-pill bg-primary float-right"></span></a>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
        <div class="page-wrapper">
            <div class="content">
                @RenderBody()
            </div>
        </div>
    </div>

    <div class="sidebar-overlay" data-reff=""></div>
    <script src="~/assets/js/jquery-3.2.1.min.js"></script>
    <script src="~/assets/js/popper.min.js"></script>
    <script src="~/assets/js/bootstrap.min.js"></script>
    <script src="~/assets/js/jquery.slimscroll.js"></script>
    <script src="~/assets/js/Chart.bundle.js"></script>
    <script src="~/assets/js/chart.js"></script>
    <script src="~/assets/js/app.js"></script>






    @* JS para combobox y campo de fecha nacimiento *@
    <script src="~/assets/js/select2.min.js"></script>
    <script src="~/assets/js/moment.min.js"></script>
    <script src="~/assets/js/bootstrap-datetimepicker.min.js"></script>

    <!--Datatables-->
    <script src="~/assets/DataTables/jquery.dataTables.min.js"></script>
    <script src="~/assets/DataTables/dataTables.bootstrap4.min.js"></script>

    <!--Alertas-->
    <script src="~/assets/plugins/sweetalert/sweetalert.min.js"></script> <!-- SweetAlert Plugin Js -->
    <script src="~/assets/js/ui/sweetalert.js"></script>

    <!--HighCharts-->
    <script src="~/assets/HighCharts/highcharts.js"></script>
    <script src="~/assets/HighCharts/highcharts-3d.js"></script>
    <script src="~/assets/HighCharts/highcharts-more.js"></script>
    <script src="~/assets/HighCharts/modules/exporting.js"></script>
    <script src="~/assets/HighCharts/modules/export-data.js"></script>
    <script src="~/assets/HighCharts/modules/accessibility.js"></script>
    <script src="~/assets/HighCharts/modules/pattern-fill.js"></script>
    <script src="~/assets/HighCharts/modules/drilldown.js"></script>
    <script src="~/assets/HighCharts/modules/offline-exporting.js"></script>

    <script>
        $(function (e) {
            $('#example').DataTable({
                "aLengthMenu": [[5, 10, 25, 50, 100, -1], [5, 10, 25, 50, 100, "Todos"]],
                "bDestroy": true,
                "language": {
                    "sProcessing": "Procesando...",
                    "sLengthMenu": "Mostrar _MENU_ registros",
                    "sZeroRecords": "No se encontraron resultados",
                    "sEmptyTable": "Ningun dato disponible en esta tabla",
                    "sInfo": "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                    "sInfoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
                    "sInfoFiltered": "(filtrado de un total de _MAX_ registros)",
                    "sInfoPostFix": "",
                    "sSearch": "Buscar:",
                    "sUrl": "",
                    "sInfoThousands": ",",
                    "sLoadingRecords": "Cargando...",
                    "oPaginate": {
                        "sFirst": "Primero",
                        "sLast": "?ltimo",
                        "sNext": "Siguiente",
                        "sPrevious": "Anterior"
                    },
                    "oAria": {
                        "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                        "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                    }
                }
            });
        });</script>
    <script>
        $(function (e) {
            $('#example1').DataTable({
                "aLengthMenu": [[5, 10, 25, 50, 100, -1], [5, 10, 25, 50, 100, "Todos"]],
                "bDestroy": true,
                "language": {
                    "sProcessing": "Procesando...",
                    "sLengthMenu": "Mostrar _MENU_ registros",
                    "sZeroRecords": "No se encontraron resultados",
                    "sEmptyTable": "Ningun dato disponible en esta tabla",
                    "sInfo": "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                    "sInfoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
                    "sInfoFiltered": "(filtrado de un total de _MAX_ registros)",
                    "sInfoPostFix": "",
                    "sSearch": "Buscar:",
                    "sUrl": "",
                    "sInfoThousands": ",",
                    "sLoadingRecords": "Cargando...",
                    "oPaginate": {
                        "sFirst": "Primero",
                        "sLast": "?ltimo",
                        "sNext": "Siguiente",
                        "sPrevious": "Anterior"
                    },
                    "oAria": {
                        "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                        "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                    }
                }
            });
        });</script>
    <script>
        $(function (e) {
            $('#example2').DataTable({
                "aLengthMenu": [[5, 10, 25, 50, 100, -1], [5, 10, 25, 50, 100, "Todos"]],
                "bDestroy": true,
                "language": {
                    "sProcessing": "Procesando...",
                    "sLengthMenu": "Mostrar _MENU_ registros",
                    "sZeroRecords": "No se encontraron resultados",
                    "sEmptyTable": "Ningun dato disponible en esta tabla",
                    "sInfo": "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                    "sInfoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
                    "sInfoFiltered": "(filtrado de un total de _MAX_ registros)",
                    "sInfoPostFix": "",
                    "sSearch": "Buscar:",
                    "sUrl": "",
                    "sInfoThousands": ",",
                    "sLoadingRecords": "Cargando...",
                    "oPaginate": {
                        "sFirst": "Primero",
                        "sLast": "?ltimo",
                        "sNext": "Siguiente",
                        "sPrevious": "Anterior"
                    },
                    "oAria": {
                        "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                        "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                    }
                }
            });
        });</script>
    <script>
        $(function (e) {
            $('#example3').DataTable({
                "aLengthMenu": [[5, 10, 25, 50, 100, -1], [5, 10, 25, 50, 100, "Todos"]],
                "bDestroy": true,
                "language": {
                    "sProcessing": "Procesando...",
                    "sLengthMenu": "Mostrar _MENU_ registros",
                    "sZeroRecords": "No se encontraron resultados",
                    "sEmptyTable": "Ningun dato disponible en esta tabla",
                    "sInfo": "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                    "sInfoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
                    "sInfoFiltered": "(filtrado de un total de _MAX_ registros)",
                    "sInfoPostFix": "",
                    "sSearch": "Buscar:",
                    "sUrl": "",
                    "sInfoThousands": ",",
                    "sLoadingRecords": "Cargando...",
                    "oPaginate": {
                        "sFirst": "Primero",
                        "sLast": "?ltimo",
                        "sNext": "Siguiente",
                        "sPrevious": "Anterior"
                    },
                    "oAria": {
                        "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                        "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                    }
                }
            });
        });</script>
    <script>
        $(function (e) {
            $('#example4').DataTable({
                "aLengthMenu": [[5, 10, 25, 50, 100, -1], [5, 10, 25, 50, 100, "Todos"]],
                "bDestroy": true,
                "language": {
                    "sProcessing": "Procesando...",
                    "sLengthMenu": "Mostrar _MENU_ registros",
                    "sZeroRecords": "No se encontraron resultados",
                    "sEmptyTable": "Ningun dato disponible en esta tabla",
                    "sInfo": "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                    "sInfoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
                    "sInfoFiltered": "(filtrado de un total de _MAX_ registros)",
                    "sInfoPostFix": "",
                    "sSearch": "Buscar:",
                    "sUrl": "",
                    "sInfoThousands": ",",
                    "sLoadingRecords": "Cargando...",
                    "oPaginate": {
                        "sFirst": "Primero",
                        "sLast": "?ltimo",
                        "sNext": "Siguiente",
                        "sPrevious": "Anterior"
                    },
                    "oAria": {
                        "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                        "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                    }
                }
            });
        });</script>
    <script>
        $(function (e) {
            $('#example5').DataTable({
                "aLengthMenu": [[5, 10, 25, 50, 100, -1], [5, 10, 25, 50, 100, "Todos"]],
                "bDestroy": true,
                "language": {
                    "sProcessing": "Procesando...",
                    "sLengthMenu": "Mostrar _MENU_ registros",
                    "sZeroRecords": "No se encontraron resultados",
                    "sEmptyTable": "Ningun dato disponible en esta tabla",
                    "sInfo": "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                    "sInfoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
                    "sInfoFiltered": "(filtrado de un total de _MAX_ registros)",
                    "sInfoPostFix": "",
                    "sSearch": "Buscar:",
                    "sUrl": "",
                    "sInfoThousands": ",",
                    "sLoadingRecords": "Cargando...",
                    "oPaginate": {
                        "sFirst": "Primero",
                        "sLast": "?ltimo",
                        "sNext": "Siguiente",
                        "sPrevious": "Anterior"
                    },
                    "oAria": {
                        "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                        "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                    }
                }
            });
        });</script>
    <script>
        $(function (e) {
            $('#example6').DataTable({
                "aLengthMenu": [[5, 10, 25, 50, 100, -1], [5, 10, 25, 50, 100, "Todos"]],
                "bDestroy": true,
                "language": {
                    "sProcessing": "Procesando...",
                    "sLengthMenu": "Mostrar _MENU_ registros",
                    "sZeroRecords": "No se encontraron resultados",
                    "sEmptyTable": "Ningun dato disponible en esta tabla",
                    "sInfo": "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                    "sInfoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
                    "sInfoFiltered": "(filtrado de un total de _MAX_ registros)",
                    "sInfoPostFix": "",
                    "sSearch": "Buscar:",
                    "sUrl": "",
                    "sInfoThousands": ",",
                    "sLoadingRecords": "Cargando...",
                    "oPaginate": {
                        "sFirst": "Primero",
                        "sLast": "?ltimo",
                        "sNext": "Siguiente",
                        "sPrevious": "Anterior"
                    },
                    "oAria": {
                        "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                        "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                    }
                }
            });
        });</script>
    <script>
        $(function (e) {
            $('#example7').DataTable({
                "aLengthMenu": [[5, 10, 25, 50, 100, -1], [5, 10, 25, 50, 100, "Todos"]],
                "bDestroy": true,
                "language": {
                    "sProcessing": "Procesando...",
                    "sLengthMenu": "Mostrar _MENU_ registros",
                    "sZeroRecords": "No se encontraron resultados",
                    "sEmptyTable": "Ningun dato disponible en esta tabla",
                    "sInfo": "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                    "sInfoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
                    "sInfoFiltered": "(filtrado de un total de _MAX_ registros)",
                    "sInfoPostFix": "",
                    "sSearch": "Buscar:",
                    "sUrl": "",
                    "sInfoThousands": ",",
                    "sLoadingRecords": "Cargando...",
                    "oPaginate": {
                        "sFirst": "Primero",
                        "sLast": "?ltimo",
                        "sNext": "Siguiente",
                        "sPrevious": "Anterior"
                    },
                    "oAria": {
                        "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                        "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                    }
                }
            });
        });</script>
    <script>
        $(function (e) {
            $('#example8').DataTable({
                "aLengthMenu": [[5, 10, 25, 50, 100, -1], [5, 10, 25, 50, 100, "Todos"]],
                "bDestroy": true,
                "language": {
                    "sProcessing": "Procesando...",
                    "sLengthMenu": "Mostrar _MENU_ registros",
                    "sZeroRecords": "No se encontraron resultados",
                    "sEmptyTable": "Ningun dato disponible en esta tabla",
                    "sInfo": "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                    "sInfoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
                    "sInfoFiltered": "(filtrado de un total de _MAX_ registros)",
                    "sInfoPostFix": "",
                    "sSearch": "Buscar:",
                    "sUrl": "",
                    "sInfoThousands": ",",
                    "sLoadingRecords": "Cargando...",
                    "oPaginate": {
                        "sFirst": "Primero",
                        "sLast": "?ltimo",
                        "sNext": "Siguiente",
                        "sPrevious": "Anterior"
                    },
                    "oAria": {
                        "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                        "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                    }
                }
            });
        });</script>
    <script>
        $(function (e) {
            $('#example9').DataTable({
                "aLengthMenu": [[5, 10, 25, 50, 100, -1], [5, 10, 25, 50, 100, "Todos"]],
                "bDestroy": true,
                "language": {
                    "sProcessing": "Procesando...",
                    "sLengthMenu": "Mostrar _MENU_ registros",
                    "sZeroRecords": "No se encontraron resultados",
                    "sEmptyTable": "Ningun dato disponible en esta tabla",
                    "sInfo": "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                    "sInfoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
                    "sInfoFiltered": "(filtrado de un total de _MAX_ registros)",
                    "sInfoPostFix": "",
                    "sSearch": "Buscar:",
                    "sUrl": "",
                    "sInfoThousands": ",",
                    "sLoadingRecords": "Cargando...",
                    "oPaginate": {
                        "sFirst": "Primero",
                        "sLast": "?ltimo",
                        "sNext": "Siguiente",
                        "sPrevious": "Anterior"
                    },
                    "oAria": {
                        "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                        "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                    }
                }
            });
        });</script>
    <script>
        $(function (e) {
            $('#example10').DataTable({
                "aLengthMenu": [[5, 10, 25, 50, 100, -1], [5, 10, 25, 50, 100, "Todos"]],
                "bDestroy": true,
                "language": {
                    "sProcessing": "Procesando...",
                    "sLengthMenu": "Mostrar _MENU_ registros",
                    "sZeroRecords": "No se encontraron resultados",
                    "sEmptyTable": "Ningun dato disponible en esta tabla",
                    "sInfo": "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                    "sInfoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
                    "sInfoFiltered": "(filtrado de un total de _MAX_ registros)",
                    "sInfoPostFix": "",
                    "sSearch": "Buscar:",
                    "sUrl": "",
                    "sInfoThousands": ",",
                    "sLoadingRecords": "Cargando...",
                    "oPaginate": {
                        "sFirst": "Primero",
                        "sLast": "?ltimo",
                        "sNext": "Siguiente",
                        "sPrevious": "Anterior"
                    },
                    "oAria": {
                        "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                        "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                    }
                }
            });
        });</script>
    <script>
        $(function (e) {
            $('#example11').DataTable({
                "aLengthMenu": [[5, 10, 25, 50, 100, -1], [5, 10, 25, 50, 100, "Todos"]],
                "bDestroy": true,
                "language": {
                    "sProcessing": "Procesando...",
                    "sLengthMenu": "Mostrar _MENU_ registros",
                    "sZeroRecords": "No se encontraron resultados",
                    "sEmptyTable": "Ningun dato disponible en esta tabla",
                    "sInfo": "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                    "sInfoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
                    "sInfoFiltered": "(filtrado de un total de _MAX_ registros)",
                    "sInfoPostFix": "",
                    "sSearch": "Buscar:",
                    "sUrl": "",
                    "sInfoThousands": ",",
                    "sLoadingRecords": "Cargando...",
                    "oPaginate": {
                        "sFirst": "Primero",
                        "sLast": "?ltimo",
                        "sNext": "Siguiente",
                        "sPrevious": "Anterior"
                    },
                    "oAria": {
                        "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                        "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                    }
                }
            });
        });</script>

    <!--Response model-->
    @*<script src="~/assets/Login/ini.js"></script>
        <script src="~/assets/Login/jquery.form.js"></script>
        <script src="~/assets/Login/jquery.validate.min.js"></script>
        <script src="~/assets/Login/jquery.validate.unobtrusive.min.js"></script>*@

</body>
</html>