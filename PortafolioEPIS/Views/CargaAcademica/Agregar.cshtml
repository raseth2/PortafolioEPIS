@model PortafolioEPIS.Models.Tbl_CargaAcademica
@{

    List<PortafolioEPIS.Models.Tbl_Semestre> objSemestre = ViewBag.Tbl_Semestre;
    List<PortafolioEPIS.Models.Tbl_CargaAcademica> carga = ViewBag.Carga;

    ViewBag.Title = "Agregar";
    int contador = 0;
    string nombrecarga = "";
    string fechainicio = "";
    string fechafin = "";
}

@foreach (var q in carga)
{
    if (q.Estado_CargaAcademica == true)
    {
        contador = contador + 1;
        nombrecarga = q.Nombre_CargaAcademica;
        fechainicio = Convert.ToString(q.FechaInicio_CargaAcademica);
        fechafin = Convert.ToString(q.FechaFin_CargaAcademica);
        @*<label>@contador @nombresemestre</label>*@
    }
}
<div class="row">
    <div class="col-sm-12">
        <h4 class="page-title">Agregar Carga Académica</h4>
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        <div class="card-box">
            <h4 class="card-title">Información de Carga Académica</h4>
            @using (Html.BeginForm("Guardar", "CargaAcademica", FormMethod.Post, new { id = "needs-validation", @novalidate = "novalidate" }))
            {
                @Html.HiddenFor(x => x.Codigo_CargaAcademica)
                <div class="row clearfix">
                    <div class="col-md-4">
                        @Html.Label("Semestre")
                        <select name="Codigo_Semestre" class="form-control" id="validationCustom01" required="required">
                            <option value=""> - Seleccione -</option>
                            @foreach (var e in objSemestre)
                            {
                                if (e.Estado_Semestre == true)
                                {
                                    <option @(Model.Codigo_Semestre.Equals(e.Codigo_Semestre) ? "selected" : "") value="@e.Codigo_Semestre">@e.Nombre_Semestre</option>
                                }
                            }
                        </select>
                        <div class="invalid-feedback">
                            Seleccionar Semestre
                        </div>
                    </div>
                    <div class="col-md-8">
                        @Html.Label("Nombre")
                        <div class="form-group">
                            @Html.TextBoxFor(x => x.Nombre_CargaAcademica, new { @class = "form-control", id = "validationCustom02", required = "required" })
                            <div class="invalid-feedback">
                                Ingrese Nombre
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row clearfix">
                    <div class="col-md-6">
                        @Html.Label("Fecha Inicio")
                        <div class="form-group">
                            @Html.EditorFor(x => x.FechaInicio_CargaAcademica, new { htmlAttributes = new { @class = "form-control date", id = "validationCustom03", required = "required" } })
                            <div class="invalid-feedback">
                                Seleccionar Fecha Inicio
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        @Html.Label("Fecha Fin")
                        <div class="form-group">
                            @Html.EditorFor(x => x.FechaFin_CargaAcademica, new { htmlAttributes = new { @class = "form-control", id = "validationCustom04", required = "required" } })
                            <div class="invalid-feedback">
                                Seleccionar Fecha Fin
                            </div>
                        </div>
                    </div>
                </div>
                if (contador > 0)
                {
                    if (Model.Estado_CargaAcademica == true)
                    {
                        <div class="row clearfix">
                            <div class="col-md-12">
                                @Html.Label("Estado")
                                <div class="form-group">
                                    @Html.RadioButtonFor(x => x.Estado_CargaAcademica, true, new { @checked = true }) Activo  <label>&nbsp &nbsp</label>
                                    @Html.RadioButtonFor(x => x.Estado_CargaAcademica, false) Inactivo
                                </div>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="row clearfix">
                            <div class="col-md-12">
                                <label style="color:red">No se puede tener muchas cargas academicas activas,Actuamente la carga @nombrecarga se encuentra  activo desde @fechainicio asta @fechafin </label>
                                <br />
                                @Html.Label("Estado")
                                <div class="form-group">
                                    @Html.RadioButtonFor(x => x.Estado_CargaAcademica, true, new { disabled = "true" }) Activo  <label>&nbsp &nbsp</label>
                                    @Html.RadioButtonFor(x => x.Estado_CargaAcademica, false, new { disabled = "true" }) Inactivo
                                </div>
                            </div>
                        </div>

                    }
                }
                if (contador == 0)
                {
                    <div class="row clearfix">
                        <div class="col-md-12">
                            @Html.Label("Estado")
                            <div class="form-group">
                                @Html.RadioButtonFor(x => x.Estado_CargaAcademica, true, new { @checked = true }) Activo  <label>&nbsp &nbsp</label>
                                @Html.RadioButtonFor(x => x.Estado_CargaAcademica, false) Inactivo
                            </div>
                        </div>
                    </div>

                }
                <div class="row clearfix">
                    <div class="col-md-12">
                        <div class="form-group">
                            <div class="form-group row">
                                <div class="col-sm-8 col-9 text-left">
                                    <div class="form-check form-check-inline">
                                        <a href="~/CargaAcademica/Index" class="btn btn btn-outline-primary btn-rounded" style='width:100px; height:35px'><i class="fa fa-close"></i>  Cancelar</a>
                                    </div>
                                    <div class="form-check form-check-inline">
                                        <button class="btn btn-primary btn-rounded" style='width:100px; height:35px' type="submit"><i class="fa fa-check"></i> Guardar</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            }
        </div>
    </div>
</div>

<script>
    // Example starter JavaScript for disabling form submissions if there are invalid fields
    (function () {
        'use strict';

        window.addEventListener('load', function () {
            var form = document.getElementById('needs-validation');
            form.addEventListener('submit', function (event) {
                if (form.checkValidity() === false) {
                    event.preventDefault();
                    event.stopPropagation();
                }
                form.classList.add('was-validated');
            }, false);
        }, false);
    })();
</script>
